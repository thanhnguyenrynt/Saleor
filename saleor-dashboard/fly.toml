# fly.toml - Saleor Dashboard Configuration
app = "saleor-admin"
primary_region = "sin"  # Change to your preferred region

[build]
  dockerfile = "Dockerfile"  # Make sure your Dockerfile is configured for Dashboard

[env]
  PORT = "8080"
  NODE_ENV = "production"
  # Saleor API URL - replace with your actual Saleor API endpoint
  API_URI = "https://saleor-api.fly.dev/graphql/"
  # Dashboard URL
  APP_MOUNT_URI = "/"
  # Set this to match your Saleor storefront domain
  ALLOWED_CLIENT_HOSTS = "saleor-storefront.fly.dev,primepod.id.vn"
  # Plugins directory
  PLUGINS_DIR = "./plugins"
  # Set to true if you're using Sentry
  SENTRY_DSN = ""
  # Dashboard static files configuration
  STATIC_URL = "/dashboard-assets/"

# Optional: Configure Sentry for monitoring
# [env.SENTRY]
#   DSN = "your-sentry-dsn-here"
#   ENVIRONMENT = "production"
#   RELEASE = "dashboard@__VERSION__"

[http_service]
  internal_port = 8080
  force_https = true
  auto_stop_machines = true
  auto_start_machines = true
  min_machines_running = 0
  processes = ["app"]

  [http_service.concurrency]
    type = "connections"
    hard_limit = 1000
    soft_limit = 500

[[services]]
  protocol = "tcp"
  internal_port = 8080

  [[services.ports]]
    port = 80
    handlers = ["http"]
    force_https = true

  [[services.ports]]
    port = 443
    handlers = ["tls", "http"]

  [services.concurrency]
    type = "connections"
    hard_limit = 1000
    soft_limit = 500

[metrics]
  port = 9091
  path = "/metrics"

[deploy]
  release_command = "echo 'Deployment Started'"
  strategy = "immediate"

[experimental]
  auto_rollback = true

[checks]
  [checks.health]
    port = 8080
    type = "http"
    interval = "15s"
    timeout = "2s"
    grace_period = "30s"
    method = "get"
    path = "/health"
    protocol = "http"
    
